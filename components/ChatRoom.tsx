import Head from 'next/head'
import React, {useState, useEffect, useMemo} from "react";
import io from "socket.io-client";
import styles from '../styles/Home.module.css'

interface ChatMessage {
    user: string;
    message: string;
    timeSent: string;
    roomName:  string | string[] | undefined;
}

interface ChatRoomProps{
    roomName: string | string[] | undefined;
}

const ChatRoom = ({roomName}: ChatRoomProps) => {

    const [message, setMessage] = useState<string>('');
    const [messages, setMessages] = useState<ChatMessage[]>([]);
    const socket = useMemo(() => io(), []);

    const [user, setUser] = useState<string>('');

    useEffect(() => { socketInitialize() }, []);

    const socketInitialize = async () => {
        await fetch('/api/socketio?room=' + roomName);
        socket.on('connect', () => {
            console.log('connected to ' + roomName);
        });
        socket.on('receivedMessage', (receivedMessage: ChatMessage) => {
            messages.push(receivedMessage);
            setMessages([...messages]);
        });
    }

    const handleSendMessage = () => {
        if(!message || !message.trim()) return;

        let today = new Date();
        let currentTime   = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();

        const messageObject: ChatMessage = {
            user: user,
            message: message,
            timeSent: currentTime,
            roomName: roomName
        }

        socket.emit('message', messageObject);
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>Next.js Chat Room</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                <div className='chatMessages'>
                    <ul>{
                        messages.map((msg) => {
                            if(msg.user === user){
                                return (
                                    <li style={{backgroundColor: 'blue', color: 'white'}}>{msg.timeSent} {msg.user} : {msg.message}</li>
                                );
                            }
                            return (
                                <li style={{backgroundColor: 'black', color: 'white'}}>{msg.timeSent} {msg.user} : {msg.message}</li>
                            );
                        })
                    }</ul>
                </div>
                <div>
                    <label>Enter your name: </label>
                    <br />
                    <input
                        type='text'
                        placeholder='Name'
                        value={user}
                        onChange={(e) => {setUser(e.target.value)}}
                    />
                </div>
                <div>
                    <input
                        type='text'
                        className='chatInput'
                        placeholder='Enter a message'
                        value={message}
                        disabled={user.trim().length == 0}
                        onChange={(e) => {setMessage(e.target.value)}}
                    >
                    </input>
                    <br />
                    <button onClick={handleSendMessage}>
                        Send
                    </button>
                </div>
            </main>
        </div>
    )
}

export default ChatRoom;